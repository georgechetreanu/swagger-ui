openapi: 3.0.3
info:
  title: Security Assets API
  description: API for managing hosts, apps, and vulnerabilities
  version: 1.0.0

servers:
  - url: https://api.example.com/v1

tags:
  - name: Hosts
    description: Endpoints for managing hosts
  - name: Apps
    description: Endpoints for managing applications installed on hosts
  - name: Vulnerabilities
    description: Endpoints for managing vulnerabilities in applications

paths:
  /hosts:
    get:
      tags: [Hosts]
      summary: List all hosts of a customer
      parameters:
        - in: query
          name: customerId
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [name, ipAddress, osName, registeredAt]
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: ipAddress
          schema:
            type: string
        - in: query
          name: osName
          schema:
            type: string
        - in: query
          name: registeredAt
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Paginated list of hosts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHosts'

  /hosts/{hostId}:
    get:
      tags: [Hosts]
      summary: Get a specific host
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Host details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
    put:
      tags: [Hosts]
      summary: Update a host
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
      responses:
        '200':
          description: Host updated
    delete:
      tags: [Hosts]
      summary: Delete a host
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Host deleted

  /apps:
    get:
      tags: [Apps]
      summary: List all apps installed on a host
      parameters:
        - in: query
          name: hostId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [name, vendor, installedAt]
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: about
          schema:
            type: string
        - in: query
          name: vendor
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: installedAt
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Paginated list of apps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApps'

  /apps/{appId}:
    get:
      tags: [Apps]
      summary: Get app details
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: App details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
    put:
      tags: [Apps]
      summary: Update app details
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        '200':
          description: App updated
    delete:
      tags: [Apps]
      summary: Delete an app
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: App deleted

  /vulnerabilities:
    get:
      tags: [Vulnerabilities]
      summary: List all vulnerabilities for an app
      parameters:
        - in: query
          name: appId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [title, severity, status, discoveredAt]
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - in: query
          name: severity
          schema:
            type: string
            enum: [low, medium, high, critical]
        - in: query
          name: status
          schema:
            type: string
            enum: [open, in_progress, resolved]
      responses:
        '200':
          description: Paginated list of vulnerabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVulnerabilities'
    
  /vulnerabilities/{vulnId}:
    get:
      tags: [Vulnerabilities]
      summary: Get vulnerability details
      parameters:
        - in: path
          name: vulnId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vulnerability details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vulnerability'
    put:
      tags: [Vulnerabilities]
      summary: Update vulnerability
      parameters:
        - in: path
          name: vulnId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vulnerability'
      responses:
        '200':
          description: Vulnerability updated
    delete:
      tags: [Vulnerabilities]
      summary: Delete vulnerability
      parameters:
        - in: path
          name: vulnId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Vulnerability deleted

components:
  schemas:
    Host:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        name:
          type: string
        ipAddress:
          type: string
          format: ipv4
        osName:
          type: string
        osVersion:
          type: string
        registeredAt:
          type: string
          format: date-time
    App:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        about:
          type: string
        vendor:
          type: string
        version:
          type: string
        installedAt:
          type: string
          format: date-time
    Vulnerability:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
        discoveredAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [open, in_progress, resolved]

    PaginatedHosts:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Host'

    PaginatedApps:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/App'

    PaginatedVulnerabilities:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
